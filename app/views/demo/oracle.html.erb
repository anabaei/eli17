

<img src=" <%= asset_path('funny_group.jpg') %>" >

<h2> Different Usage of Databases</h2>
<li>Online Transaction Processing- OLTP. It uses for checking the data transactions </li>
<li> Online Analytical Processing. It uses for analyzing the data like Google Analytic </li>

<h2> Types of Database</h2>
<li> Relational database management system</li>
<li> Object database management system</li>
<li> Multi dimentional database management system</li>


<h2> Database Management Systems </h2>
<p> <b>Oracle,
,Microsoft SQL Server
,MySQL (Open source)
,Sybase
,Postgre SQL
,Informix
,DB2 </b></p>
<p><b> Each Database management system has two parts: </b> </p>
<li> Server components. One part is database engine to comunicatie with database to parse, retrive. Another part is job schedualer in order to find who has done what on database and another part is finding most effiecient way to retrive data </li>
<li> Client components. Tools for querying data like SQL DEVELOPER.</li>
<legend> </legend>
<h2> Subsets of SQL </h2>
<li>  Data manipulation language.  It works with data and we can rollback or undo them  SELECT, INSERT, UPDATE, and DELETE
</li>
<li>  Data defination language. It changes the structure of database and we can not rollback them  CREATE, ALTER, DROP(to remove a table) and TRUNCATE(to wipe off all data on a table)
</li>
<li>  Data control language. It changes the access to database, who is allow to see what, same as GRANT REVOKE and DENY
</li>
<li>  Transaction control language COMMIT, ROLLBACK, SAVEPOINT. Transaction is logical operation with sql. Like an account transfering from one person's account to another. It requires two steps.
 <ol>
<li> Update one account to retrieve data from it</li>
<li> Then another update to the person who wanted to tranfer money to</li>
 </ol>
<p> We can not do these two steps at once. So these two update statement (DML statement) create one transaction. Transaction has to all DML statement happen or none of them therefore there is rollback in each transaction. </p>
 </li>

<legend> </legend>
<P> <b>Entity</b> is the object which has several attributes or columns. Common entities are customer, user, client, product which each one is a table. <p>
<p> <b>Columns </b> or attributes holding only one value for each record. For ex. an address is not a column and it should be multiple columns like street name, pos city </p>
<P> <b> Tuples or Records </b>  is a complete collection of data. It means an entire row holding information about one thing. </P>
<p> <b> Primary Key </b> is a unique identifier for our entities. PK can not be null. Some call it artificial or sorted number which doesnt do anything except be a unique identifer. Everything that is not primary key we call it non-primary. </p> 
<p> <b>none-primary key </b> every column which is not primary key. </p>
<p> <b>Foreign Key </b> is a column on child table referencing unique identifier on parent table. </p>
<p> <b> Self Refrential Relationship</b> for example  an entity  student whith attribue call tutor. Also each tutor is a student so it would be a foriegn key with student id refering to student table. </p>
<b> One to Many Relationship </b>
<div class="alert alert-warning"> Parents dont know their children but children know them. </div>
<p><b> Many to Many Relationship</b> We create a link table with a composite primary key of each table and make one to many relationship. Student can enroll in many courses and a class can have many students. If in student table we have a grade attribute and we want to find all the student grades in one class. This is a good <a href="http://stackoverflow.com/questions/7296846/how-to-implement-one-to-one-one-to-many-and-many-to-many-relationships-while-de"> link </a> </p>
</p>

<p><b> Composite Primary key </b>
<pre class="prettyprint lang-sql">
CREATE TABLE student_class 
(
    studentId INT REFERENCES student,
    classId INT REFERENCES class,
    PRIMARY KEY(studentId, classId)
);
</pre>

<h3 class="title"> Set out put SQL Developer</h3>
<p class="code">with below codes we can check the size and set it to customized version</p>
<pre class="prettyprint lang-sql">
show linesize;
show pagesize;
set pagesize  150;
set linesize 140; 
</pre>

<p> <b> Data Model </b> The process of defining and processing of information call data model. We need to identify what are the entities and attributes are and define the relationship among tables. It should be clear how the tables and attributes are and always ask question. </p>


<h3> Basic DML  </h3>
<p><b> Select </b> </p>
<p> <b> Insert</b> </p>
<pre class="prettyprint lang-sql">
Insert into students(
   student_id,
   name,
   grade,
 ) VALUES (
	1,
	'Amir',
	'C'
);
</pre>
<p><b> Update </b> </p>
<pre class="prettyprint lang-sql">
Update 
  students
SET
  grade = 'A+'
;
</pre>
<p> <b> Delete</b> </p>
<pre class="prettyprint lang-sql">
DELETE FROM students 
WHERE name = 'Amir'
</pre>
<div class=" alert alert-warning">
SQL is case insensitive only inside quotes it is.
</div>

<h3> Constraint</h3>
<p> SQL constraints are used to specify rules for the data in a table.

 If there is any violation between the constraint and the data action, the action is aborted by the constraint. from this <a href = "http://www.w3schools.com/sql/sql_constraints.asp"> refrence </a></p>











